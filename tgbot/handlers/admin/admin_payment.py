# - *- coding: utf- 8 - *-
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message

from tgbot.data.loader import dp
from tgbot.keyboards.inline_admin import payment_choice_finl
from tgbot.services.api_yookassa import YooKassaApi
from tgbot.services.api_sqlite import update_paymentx, get_paymentx
from tgbot.utils.misc.bot_filters import IsAdmin
from tgbot.data.config import get_yoo_config


###################################################################################
############################# –í–´–ë–û–† –°–ü–û–°–û–ë–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø ############################
# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.message_handler(IsAdmin(), text="üñ≤ –°–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", state="*")
async def payment_systems(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>", reply_markup=payment_choice_finl())


# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∞–º–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="change_payment:")
async def payment_systems_edit(call: CallbackQuery):
    way_pay = call.data.split(":")[1]
    way_status = call.data.split(":")[2]

    yoo_config = get_yoo_config()

    if 'shop_id' in yoo_config and 'api_key' in yoo_config:
        if way_pay == "Yoo":
            update_paymentx(way_yoo=way_status)
    else:
        return await call.answer("‚ùó –î–æ–±–∞–≤—å—Ç–µ –≤ settings.ini API –∫–ª—é—á –ÆKassa –ø–µ—Ä–µ–¥ –≤–∫–ª—é—á–µ–Ω–∏–µ–º –°–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π", True)

    await call.message.edit_text("<b>üñ≤ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</b>", reply_markup=payment_choice_finl())


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ÆKassa
@dp.message_handler(IsAdmin(), text="ü§ñ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ÆKassa ‚ôª", state="*")
async def payment_shop_check(message: Message, state: FSMContext):
    await state.finish()

    await YooKassaApi(message, pass_check=True).pre_checker()
